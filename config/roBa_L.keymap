#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

// スクロール速度を設定

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <8 7>;
        };

        double_quotation {
            bindings = <&kp SQT>;
            key-positions = <33 32>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <8 9>;
        };

        colon {
            bindings = <&kp SEMICOLON>;
            key-positions = <20 21>;
        };

        linked_brackets {
            bindings = <&linked_brackets>;
            key-positions = <29 28>;
        };

        parentheses {
            bindings = <&parentheses>;
            key-positions = <16 17>;
        };

        middle_ckick {
            bindings = <&mkp MB3>;
            key-positions = <31 32>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <11 12>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <20 19>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <6 7>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <1 2>;
        };

        back {
            bindings = <&mkp MB4>;
            key-positions = <41 18>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        linked_brackets: linked_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp LBKT &kp RBKT &kp SPACE>;
            label = "LINKED_BRACKETS";
        };

        parentheses: parentheses {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            label = "PARENTHESES";
        };

        employee_num: employee_num {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp N6 &kp N6 &kp N9 &kp N6 &kp N8 &kp N4 &kp N1>;
            label = "EMPLOYEE_NUM";
        };

        Tnbt: Tnbt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp A &kp N &kp A &kp B &kp O &kp T &kp A>;
            label = "TNBT";
        };

        nttcomcojp: nttcomcojp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp I &kp B &kp U &kp K &kp A &kp DOT &kp R &kp Y &kp O &kp M &kp A &kp AT &kp N &kp T &kp T &kp C &kp O &kp M &kp DOT &kp C &kp O &kp DOT &kp J &kp P>;
            label = "NTTCOMCOJP";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        // ロータリーエンコーダにスクロールを追加するためのbehavior

        rotate_scroll: rotate_scroll {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE_SCROLL";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };

        rotate_kp: rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE_KP";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tap-ms = <100>;
        };

        up2right: up2right {
            compatible = "zmk,behavior-mod-morph";
            label = "UP2RIGHT";
            bindings = <&msc SCRL_UP>, <&msc SCRL_RIGHT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        down2left: down2left {
            compatible = "zmk,behavior-mod-morph";
            label = "DOWN2LEFT";
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_LEFT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R            &kp T                                                            &kp Y        &kp U  &kp I     &kp O     &kp MINUS
&kp A             &kp S         &lt 4 D       &lt 1 F          &kp G                 &mkp MB3                    &kp MINUS      &kp H        &kp J  &lt 3 K   &kp L     &kp P
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V            &mt LEFT_GUI B        &kp COLON                   &kp SEMICOLON  &kp N        &kp M  &mkp MB1  &mkp MB2  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &mt LCTRL LANG2  &mt LEFT_SHIFT SPACE  &lt_to_layer_0 2 LANG1      &kp BACKSPACE  &lt 2 ENTER                             &sl 5
            >;

            sensor-bindings = <&rotate_scroll SCRL_DOWN SCRL_UP>;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans    &kp N7  &kp N8  &kp N9  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp LPAR  &kp RPAR  &kp N4  &kp N5  &kp N6  &kp PLUS
&trans  &trans  &trans  &trans  &trans  &trans      &kp LBKT  &kp RBKT  &kp N1  &kp N2  &kp N3  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &kp N0                            &kp ASTRK
            >;
        };

        ARROW {
            bindings = <
&kp EXCL  &trans    &trans      &trans  &trans                      &trans         &trans    &kp UP     &trans     &trans
&kp AT    &kp HASH  &kp DOLLAR  &trans  &trans  &trans      &trans  &kp LC(LA(C))  &kp LEFT  &kp DOWN   &kp RIGHT  &trans
&trans    &trans    &trans      &trans  &trans  &trans      &trans  &kp AMPS       &kp BSPC  &kp LC(A)  &kp DEL    &trans
&trans    &trans    &trans      &trans  &trans  &trans      &trans  &trans                                         &trans
            >;
        };

        SCROLL {
            bindings = <
&kp LS(EXCL)  &trans         &trans        &trans  &trans                      &trans     &trans           &trans  &trans             &trans
&kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &trans  &trans  &trans      &trans  &trans     &kp LC(PAGE_UP)  &trans  &kp LC(PAGE_DOWN)  &trans
&trans        &trans         &trans        &trans  &trans  &trans      &trans  &trans     &trans           &trans  &trans             &trans
&trans        &trans         &trans        &trans  &trans  &trans      &trans  &kp LC(W)                                              &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        WINDOW {
            bindings = <
&trans  &trans            &trans  &trans             &trans                      &trans  &trans        &kp LG(UP)    &trans         &trans
&trans  &kp LG(LS(LEFT))  &trans  &kp LG(LS(RIGHT))  &trans  &trans      &trans  &trans  &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(RIGHT)  &trans
&trans  &trans            &trans  &trans             &trans  &trans      &trans  &trans  &trans        &kp COMMA     &kp PERIOD     &kp LS(QUESTION)
&trans  &trans            &trans  &trans             &trans  &trans      &trans  &trans                                             &trans
            >;
        };

        SONOTA {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &employee_num  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans         &bt BT_CLR
&trans  &trans        &trans        &trans        &Tnbt   &trans      &trans       &trans                                                   &bt BT_CLR_ALL
            >;
        };
    };
};
